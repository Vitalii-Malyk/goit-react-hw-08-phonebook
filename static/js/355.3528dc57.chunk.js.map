{"version":3,"file":"static/js/355.3528dc57.chunk.js","mappings":"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","sources":["components/Forms/FormCreateContact.styled.js","components/Forms/FormCreateContact.jsx","../node_modules/nanoid/index.browser.js","components/FilterContacts/FilterContacts.styled.js","components/FilterContacts/FilterContacts.jsx","components/Forms/FormUpdateContact.styled.js","components/Forms/FormUpdateContact.jsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","components/CreateListContact/CreateListContact.styled.js","components/CreateListContact/CreateListContact.jsx","Page/User/UserPage.styled.js","Page/User/UserPage.jsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Update.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormElementStyle = styled('form')(() => {\n  return {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '18px',\n    width: 'fit-content',\n  };\n});\n\nexport const InputElementStyle = styled('input')(() => {\n  return {\n    border: 'none',\n    backgroundColor: 'antiquewhite',\n    padding: '4px',\n    borderRadius: '5px',\n  };\n});\n\nexport const WrapperStyle = styled('div')(() => {\n  return {\n    display: 'flex',\n    justifyContent: 'center',\n  };\n});\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport toast from 'react-hot-toast';\n\nimport { addContact } from 'redux/contactsOperations';\nimport { contactsSelector } from 'redux/Selectors';\n\nimport { Button } from 'helper/materialApiImport';\n\nimport {\n  FormElementStyle,\n  InputElementStyle,\n  WrapperStyle,\n} from 'components/Forms/FormCreateContact.styled';\n\nexport const FormCreateContact = () => {\n  const [name, setName] = useState('');\n  const [number, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const { items } = useSelector(contactsSelector);\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'number') {\n      setPhone(value);\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n  const сreateСontact = e => {\n    e.preventDefault();\n\n    return formSubmitHandler({ name, number });\n  };\n  const formSubmitHandler = ({ name, number }) => {\n    repeatControl({ name, number });\n  };\n  const repeatControl = newContact => {\n    let nameArr = {\n      id: nanoid(),\n      name: newContact.name,\n      number: newContact.number,\n    };\n    if (items.length > 0) {\n      if (\n        !items.find(\n          nameArr =>\n            nameArr.name.toLowerCase() === newContact.name.toLowerCase()\n        )\n      ) {\n        dispatch(addContact(nameArr));\n        resetForm();\n      } else {\n        toast.error('The contact is already in the phone book!');\n      }\n    } else {\n      dispatch(addContact(nameArr));\n      resetForm();\n    }\n  };\n\n  return (\n    <WrapperStyle>\n      <FormElementStyle onSubmit={сreateСontact}>\n        <label>Name</label>\n        <InputElementStyle\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={name}\n          required\n        />\n        <label>Phone</label>\n        <InputElementStyle\n          type=\"tel\"\n          onChange={handleChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          value={number}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        ></InputElementStyle>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{\n            mt: 1,\n            mb: 1,\n            p: 0.2,\n            color: 'darkslategray',\n            backgroundColor: 'rgb(250, 235, 215)',\n            ':hover': {\n              backgroundColor: 'rgb(250, 235, 215, 0.8)',\n              color: 'rgba(25, 118, 210)',\n            },\n          }}\n        >\n          Add contact\n        </Button>\n      </FormElementStyle>\n    </WrapperStyle>\n  );\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import styled from 'styled-components';\n\nexport const WrapElementStyle = styled('div')(() => {\n  return {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '7px',\n    width: 'fit-content',\n  };\n});\n\nexport const InputElementStyle = styled('input')(() => {\n  return {\n    border: 'none',\n    backgroundColor: 'antiquewhite',\n    padding: '4px',\n    borderRadius: '5px',\n  };\n});\n\nexport const WrapMainElementStyle = styled('div')(() => {\n  return {\n    display: 'flex',\n    alignItems: 'end',\n    gap: '10px',\n    justifyContent: 'center',\n    marginBottom: '10px',\n  };\n});\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { updateFilter } from 'redux/filterSlice';\nimport { filterSelector } from 'redux/Selectors';\n\nimport {\n  WrapElementStyle,\n  InputElementStyle,\n  WrapMainElementStyle,\n} from 'components/FilterContacts/FilterContacts.styled';\n\nexport const FilterContacts = () => {\n  const filter = useSelector(filterSelector);\n  const dispatch = useDispatch();\n\n  let nameInputId = nanoid();\n\n  const handleChange = ({ currentTarget: { value } }) => {\n    const normalizedValue = value.toLowerCase().trim();\n    dispatch(updateFilter(normalizedValue));\n  };\n\n  return (\n    <WrapMainElementStyle>\n      <WrapElementStyle>\n        <label htmlFor={nameInputId}>Filter contacts:</label>\n        <InputElementStyle\n          onChange={handleChange}\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          value={filter}\n        />\n      </WrapElementStyle>\n    </WrapMainElementStyle>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormElementStyle = styled('form')(() => {\n  return {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '18px',\n    width: 'fit-content',\n  };\n});\n\nexport const InputElementStyle = styled('input')(() => {\n  return {\n    border: 'none',\n    backgroundColor: 'antiquewhite',\n    padding: '4px',\n    borderRadius: '5px',\n  };\n});\n\nexport const WrapperStyle = styled('div')(() => {\n  return {\n    display: 'flex',\n    justifyContent: 'center',\n  };\n});\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\n\nimport { updateContact } from 'redux/contactsOperations';\nimport { contactsSelector } from 'redux/Selectors';\n\nimport { Button } from 'helper/materialApiImport';\n\nimport {\n  FormElementStyle,\n  InputElementStyle,\n  WrapperStyle,\n} from 'components/Forms/FormUpdateContact.styled';\n\nexport const FormUpdateContact = ({ contactId }) => {\n  const [name, setName] = useState('');\n  const [number, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const { items } = useSelector(contactsSelector);\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'number') {\n      setPhone(value);\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const updateСontact = e => {\n    e.preventDefault();\n\n    return formSubmitHandler({ name, number });\n  };\n  const formSubmitHandler = ({ name, number }) => {\n    repeatControl({ name, number });\n  };\n  const repeatControl = newContact => {\n    let nameArr = {\n      id: contactId,\n      name: newContact.name,\n      number: newContact.number,\n    };\n    if (items.length > 0) {\n      if (\n        !items.find(\n          nameArr =>\n            nameArr.name.toLowerCase() === newContact.name.toLowerCase()\n        )\n      ) {\n        dispatch(updateContact(nameArr));\n        resetForm();\n      } else {\n        toast.error('The contact is already in the phone book!');\n      }\n    } else {\n      dispatch(updateContact(nameArr));\n      resetForm();\n    }\n  };\n\n  return (\n    <WrapperStyle>\n      <FormElementStyle onSubmit={updateСontact}>\n        <label>Name</label>\n        <InputElementStyle\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={name}\n          required\n        />\n        <label>Phone</label>\n        <InputElementStyle\n          type=\"tel\"\n          onChange={handleChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          value={number}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        ></InputElementStyle>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{\n            mt: 1,\n            mb: 1,\n            p: 0.2,\n            color: 'darkslategray',\n            backgroundColor: 'rgb(250, 235, 215)',\n            ':hover': {\n              backgroundColor: 'rgb(250, 235, 215, 0.8)',\n              color: 'rgba(25, 118, 210)',\n            },\n          }}\n        >\n          Update contact\n        </Button>\n      </FormElementStyle>\n    </WrapperStyle>\n  );\n};\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import styled from 'styled-components';\n\nexport const ListElementStyle = styled.ul`\n  list-style: none;\n  padding: 0;\n  font-size: 18px;\n  display: grid;\n  justify-content: center;\n  gap: 12px;\n\n  @media (min-width: 420px) {\n    grid-template-columns: 0fr 0fr;\n  }\n  @media (min-width: 768px) {\n    grid-template-columns: 0fr 0fr 0fr;\n  }\n  @media (min-width: 1280px) {\n    grid-template-columns: 0fr 0fr 0fr 0fr 0fr;\n  }\n`;\n\nexport const ItemElementStyle = styled('li')(() => {\n  return {\n    display: 'flex',\n    gap: '8px',\n  };\n});\n\nexport const ButtonElementStyle = styled('button')(() => {\n  return {\n    border: '0',\n    color: 'antiquewhite',\n    padding: '4px 6px',\n    fontSize: '10px',\n    cursor: 'pointer',\n    background: 'transparent',\n  };\n});\n\nexport const WrapElementStyle = styled('p')(() => {\n  return {\n    marginTop: '5px',\n    fontSize: '18px',\n    width: 'inherit',\n    textAlign: 'center',\n  };\n});\nexport const WrapBtnStyle = styled('div')(() => {\n  return {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  };\n});\n","import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport * as React from 'react';\n\nimport { delContact } from 'redux/contactsOperations';\nimport { FormUpdateContact } from 'components/Forms/FormUpdateContact';\nimport {\n  contactsSelector,\n  filterSelector,\n  isModalContactsSelector,\n} from 'redux/Selectors';\nimport bgImage from 'helper/image/telefon-bgc.jpg';\n\nimport {\n  Box,\n  Typography,\n  Modal,\n  Card,\n  CardActions,\n  CardContent,\n  DeleteIcon,\n  UpdateIcon,\n  Button,\n  IconButton,\n} from 'helper/materialApiImport';\n\nimport {\n  ListElementStyle,\n  ItemElementStyle,\n  WrapElementStyle,\n  WrapBtnStyle,\n} from 'components/CreateListContact/CreateListContact.styled';\n\nexport const CreateListContact = () => {\n  const dispatch = useDispatch();\n  const [id, setId] = useState(null);\n  const [open, setOpen] = useState(false);\n  const isModal = useSelector(isModalContactsSelector);\n  const contacts = useSelector(contactsSelector);\n  const filter = useSelector(filterSelector);\n\n  const handleOpen = id => {\n    setOpen(true);\n  };\n  const handleClose = () => setOpen(false);\n\n  useEffect(() => {\n    !isModal && handleClose();\n  }, [isModal]);\n\n  const styleModal = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 300,\n    '@media(min-width: 420px)': { width: 350 },\n    '@media(min-width: 768px)': { width: 450 },\n    backgroundImage: `url(${bgImage})`,\n    backgroundSize: 'cover',\n    overflow: 'unset',\n    backgroundPosition: 'center center',\n    border: '1px solid rgb(250, 235, 215)',\n    boxShadow: 24,\n    p: 1,\n    color: 'rgb(250, 235, 215)',\n  };\n\n  const deleteContactFromList = ({ id, name }) => {\n    dispatch(delContact(id));\n  };\n\n  const updateContactFromList = ({ id, name }) => {\n    handleOpen();\n    setId(id);\n  };\n\n  const normalizedFilter = filter.toLocaleLowerCase();\n  const filtredContacts = contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  const CreateContactItem = () => {\n    return filtredContacts.map(contact => {\n      return (\n        <ItemElementStyle key={nanoid()}>\n          <Card\n            sx={{\n              minWidth: 175,\n              maxWidth: 200,\n              height: 50,\n              display: 'flex',\n              backgroundColor: 'rgb(250, 235, 215)',\n            }}\n          >\n            <CardContent sx={{ width: 150, m: 0, p: 0.2 }}>\n              <Typography\n                sx={{ mb: 0, textAlign: 'center', justifyContent: 'center' }}\n                variant=\"elevation\"\n              >{`${contact.name}`}</Typography>\n              <Typography\n                sx={{ mb: 0, textAlign: 'center', justifyContent: 'center' }}\n                color=\"text.secondary\"\n              >\n                {`${contact.number}`}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <IconButton\n                aria-label=\"update\"\n                size=\"small\"\n                onClick={() => updateContactFromList(contact)}\n              >\n                <UpdateIcon fontSize=\"inherit\" color=\"primary\" />\n              </IconButton>\n              <IconButton\n                aria-label=\"delete\"\n                size=\"small\"\n                onClick={() => deleteContactFromList(contact)}\n              >\n                <DeleteIcon fontSize=\"inherit\" color=\"primary\" />\n              </IconButton>\n            </CardActions>\n          </Card>\n        </ItemElementStyle>\n      );\n    });\n  };\n  return (\n    <>\n      {contacts.items.length > 0 && (\n        <ListElementStyle>\n          <CreateContactItem />\n        </ListElementStyle>\n      )}\n      <WrapElementStyle>\n        The phone book is empty, add a contact\n      </WrapElementStyle>\n      <Modal open={open} onClose={handleClose}>\n        <Box sx={styleModal}>\n          <WrapBtnStyle>\n            <Button\n              onClick={handleClose}\n              sx={{\n                mt: 0,\n                mb: 0,\n                p: 0,\n                minWidth: '7%',\n                color: 'darkslategray',\n                backgroundColor: 'rgb(250, 235, 215)',\n                ':hover': {\n                  backgroundColor: 'rgb(250, 235, 215, 0.8)',\n                  color: 'rgba(25, 118, 210)',\n                },\n              }}\n            >\n              X\n            </Button>\n          </WrapBtnStyle>\n          <FormUpdateContact\n            contactId={id}\n            closeModal={() => {\n              handleClose();\n            }}\n          />\n        </Box>\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nimport bgImage from 'helper/image/telefon-bgc.jpg';\n\nexport const ButtonStyle = styled.button`\n  display: block;\n  color: black;\n  padding: 5px;\n  margin-bottom: 20px;\n  width: fit-content;\n  border: 1px solid black;\n  border-radius: 10px;\n  text-decoration: none;\n  background-color: white;\n  &:hover,\n  &:focus {\n    color: blueviolet;\n    border-color: blueviolet;\n  }\n`;\n\nexport const TitleStyle = styled.h1`\n  display: flex;\n  justify-content: center;\n  margin: 10px 0;\n`;\nexport const TextStyle = styled.h2`\n  display: flex;\n  justify-content: center;\n  margin: 10px 0;\n`;\nexport const WrapLoaderStyle = styled.div`\n  height: 20px;\n  @media (min-width: 768px) {\n    height: 40px;\n  }\n  @media (min-width: 1280px) {\n    height: 75px;\n  }\n`;\nexport const WrapMainElementStyle = styled.div`\n  min-height: 100vh;\n  color: antiquewhite;\n  background-image: url(${bgImage});\n  background-repeat: no-repeat;\n  background-size: cover;\n  overflow: unset;\n  background-position: center center;\n`;\n","import { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { FormCreateContact } from 'components/Forms/FormCreateContact';\nimport { FilterContacts } from 'components/FilterContacts/FilterContacts';\nimport { CreateListContact } from 'components/CreateListContact/CreateListContact';\nimport { fetchContacts } from 'redux/contactsOperations';\nimport { Loader2 } from 'components/Loading/Loading';\n\nimport { Button } from 'helper/materialApiImport';\n\nimport {\n  TextStyle,\n  TitleStyle,\n  WrapLoaderStyle,\n  WrapMainElementStyle,\n} from './UserPage.styled';\n\nconst UserPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <WrapMainElementStyle>\n        <Button\n          onClick={() => {\n            navigate('/');\n          }}\n          type=\"button\"\n          variant=\"contained\"\n          sx={{\n            mt: 1,\n            mb: 1,\n            p: 0.3,\n            color: 'darkslategray',\n            backgroundColor: 'rgb(250, 235, 215)',\n            ':hover': {\n              backgroundColor: 'rgb(250, 235, 215, 0.8)',\n              color: 'rgba(25, 118, 210)',\n            },\n          }}\n          size=\"small\"\n        >\n          Go home\n        </Button>\n        <TitleStyle>Phonbook</TitleStyle>\n        <FormCreateContact />\n        <TextStyle>Contacts</TextStyle>\n        <FilterContacts />\n        <WrapLoaderStyle>{<Loader2 />}</WrapLoaderStyle>\n        <CreateListContact />\n      </WrapMainElementStyle>\n    </>\n  );\n};\n\nexport default UserPage;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 10.12h-6.78l2.74-2.82c-2.73-2.7-7.15-2.8-9.88-.1-2.73 2.71-2.73 7.08 0 9.79s7.15 2.71 9.88 0C18.32 15.65 19 14.08 19 12.1h2c0 1.98-.88 4.55-2.64 6.29-3.51 3.48-9.21 3.48-12.72 0-3.5-3.47-3.53-9.11-.02-12.58s9.14-3.47 12.65 0L21 3v7.12zM12.5 8v4.25l3.5 2.08-.72 1.21L11 13V8h1.5z\"\n}), 'Update');\nexports.default = _default;"],"names":["FormElementStyle","styled","display","flexDirection","gap","width","InputElementStyle","border","backgroundColor","padding","borderRadius","WrapperStyle","justifyContent","FormCreateContact","useState","name","setName","number","setPhone","dispatch","useDispatch","items","useSelector","contactsSelector","handleChange","target","value","resetForm","formSubmitHandler","repeatControl","newContact","nameArr","id","nanoid","length","find","toLowerCase","toast","addContact","onSubmit","e","preventDefault","onChange","type","pattern","required","title","Button","fullWidth","variant","sx","mt","mb","p","color","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","WrapElementStyle","WrapMainElementStyle","alignItems","marginBottom","FilterContacts","filter","filterSelector","nameInputId","htmlFor","normalizedValue","currentTarget","trim","updateFilter","FormUpdateContact","contactId","updateContact","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","Paper","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","paddingBottom","component","as","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","spacing","marginLeft","slots","ListElementStyle","ItemElementStyle","fontSize","cursor","background","marginTop","textAlign","WrapBtnStyle","CreateListContact","setId","open","setOpen","isModal","isModalContactsSelector","contacts","handleClose","useEffect","styleModal","position","top","left","transform","backgroundImage","bgImage","backgroundSize","backgroundPosition","boxShadow","updateContactFromList","normalizedFilter","toLocaleLowerCase","filtredContacts","contact","includes","CreateContactItem","map","minWidth","maxWidth","height","m","Typography","IconButton","onClick","Update","delContact","deleteContactFromList","Delete","Modal","onClose","Box","closeModal","TitleStyle","TextStyle","WrapLoaderStyle","navigate","useNavigate","fetchContacts","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}