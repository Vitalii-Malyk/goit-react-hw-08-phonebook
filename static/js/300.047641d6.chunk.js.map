{"version":3,"file":"static/js/300.047641d6.chunk.js","mappings":"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","sources":["components/Forms/FormCreateContact.styled.js","components/Forms/FormCreateContact.jsx","components/FilterContacts/FilterContacts.styled.js","components/FilterContacts/FilterContacts.jsx","components/CreateListContact/CreateListContact.styled.js","components/CreateListContact/CreateListContact.jsx","Page/User/UserPage.jsx","components/App/App.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormElementStyle = styled('form')(() => {\n  return {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '18px',\n    width: 'fit-content',\n  };\n});\n\nexport const InputElementStyle = styled('input')(() => {\n  return {\n    border: 'none',\n    backgroundColor: 'antiquewhite',\n    padding: '4px',\n    borderRadius: '5px',\n  };\n});\n\nexport const ButtonElementStyle = styled('button')(() => {\n  return {\n    appearance: 'none',\n    border: '0',\n    borderRadius: '5px',\n    background: 'antiquewhite',\n    color: 'darkslategray',\n    padding: '4px',\n    fontSize: '16px',\n    cursor: 'pointer',\n  };\n});\n","import { useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  FormElementStyle,\n  InputElementStyle,\n  ButtonElementStyle,\n} from 'components/Forms/FormCreateContact.styled';\n\nimport { addContact } from 'redux/contactsOperations';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst FormCreateContact = () => {\n  const [name, setName] = useState('');\n  const [number, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const { items } = useSelector(state => state.contacts);\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'number') {\n      setPhone(value);\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n  const сreateСontact = e => {\n    e.preventDefault();\n\n    return formSubmitHandler({ name, number });\n  };\n  const formSubmitHandler = ({ name, number }) => {\n    repeatControl({ name, number });\n  };\n  const repeatControl = newContact => {\n    let nameArr = {\n      id: nanoid(),\n      name: newContact.name,\n      number: newContact.number,\n    };\n    if (items.length > 0) {\n      if (\n        !items.find(\n          nameArr =>\n            nameArr.name.toLowerCase() === newContact.name.toLowerCase()\n        )\n      ) {\n        dispatch(addContact(nameArr));\n        Notify.info(\n          `A contact named ${nameArr.name} has been added to the contacts book`,\n          {\n            position: 'center-center',\n            timeout: '1500',\n          }\n        );\n        resetForm();\n      } else {\n        Notify.info('The contact is already in the phone book!', {\n          position: 'center-center',\n          timeout: '1500',\n        });\n      }\n    } else {\n      console.log(nameArr);\n      dispatch(addContact(nameArr));\n      resetForm();\n    }\n  };\n\n  return (\n    <FormElementStyle onSubmit={сreateСontact}>\n      <label>Name</label>\n      <InputElementStyle\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        value={name}\n        required\n      />\n      <label>Phone</label>\n      <InputElementStyle\n        type=\"tel\"\n        onChange={handleChange}\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        value={number}\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      ></InputElementStyle>\n      <ButtonElementStyle type=\"submit\">Add contact</ButtonElementStyle>\n    </FormElementStyle>\n  );\n};\n\nexport default FormCreateContact;\n","import styled from 'styled-components';\n\nexport const WrapElementStyle = styled('div')(() => {\n  return {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '7px',\n    width: 'fit-content',\n  };\n});\n\nexport const InputElementStyle = styled('input')(() => {\n  return {\n    border: 'none',\n    backgroundColor: 'antiquewhite',\n    padding: '4px',\n    borderRadius: '5px',\n  };\n});\n\nexport const WrapMainElementStyle = styled('div')(() => {\n  return {\n    display: 'flex',\n    alignItems: 'end',\n    gap: '10px',\n  };\n});\n","import React from 'react';\nimport { nanoid } from 'nanoid';\n\nimport {\n  WrapElementStyle,\n  InputElementStyle,\n  WrapMainElementStyle,\n} from 'components/FilterContacts/FilterContacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from 'redux/filterSlice';\nimport Example from 'components/Loading/Loading';\n\nconst FilterContacts = () => {\n  let nameInputId = nanoid();\n  const filter = useSelector(state => state.filter);\n\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(state => state.contacts);\n\n  const handleChange = ({ currentTarget: { value } }) => {\n    const normalizedValue = value.toLowerCase().trim();\n    dispatch(updateFilter(normalizedValue));\n  };\n\n  return (\n    <WrapMainElementStyle>\n      <WrapElementStyle>\n        <label htmlFor={nameInputId}>Filter contacts:</label>\n        <InputElementStyle\n          onChange={handleChange}\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          value={filter}\n        />\n      </WrapElementStyle>\n      {isLoading && <Example />}\n    </WrapMainElementStyle>\n  );\n};\n\nexport default FilterContacts;\n","import styled from 'styled-components';\n\nexport const ListElementStyle = styled('ul')(() => {\n  return {\n    listStyle: 'none',\n    marginTop: '5px',\n    padding: 0,\n    fontSize: '18px',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '5px',\n  };\n});\n\nexport const ItemElementStyle = styled('li')(() => {\n  return {\n    display: 'flex',\n    gap: '8px',\n  };\n});\n\nexport const ButtonElementStyle = styled('button')(() => {\n  return {\n    border: '0',\n    color: 'antiquewhite',\n    padding: '4px 6px',\n    fontSize: '10px',\n    cursor: 'pointer',\n    background: 'transparent',\n  };\n});\n\nexport const WrapElementStyle = styled('div')(() => {\n  return {\n    marginTop: '5px',\n    fontSize: '18px',\n  };\n});\n","import { nanoid } from 'nanoid';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\n\nimport {\n  ListElementStyle,\n  ItemElementStyle,\n  ButtonElementStyle,\n  WrapElementStyle,\n} from 'components/CreateListContact/CreateListContact.styled';\nimport { delContact, fetchContacts } from 'redux/contactsOperations';\nimport Loader from 'components/Loading/Loading';\n\nconst CreateListContact = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.contacts.isLoading);\n  const error = useSelector(state => state.contacts.error);\n  const contacts = useSelector(state => state.contacts);\n  const isAuth = useSelector(state => state.auth.isAuth);\n  const filter = useSelector(state => state.filters);\n\n  useEffect(() => {\n    if (!isAuth) return;\n    dispatch(fetchContacts());\n  }, [dispatch, isAuth]);\n\n  const deleteContactFromList = ({ id, name }) => {\n    dispatch(delContact(id));\n    Notify.info(`The contact with the name ${name} has been deleted`, {\n      position: 'center-center',\n      autoHideDelay: 1500,\n    });\n  };\n\n  const normalizedFilter = filter.toLocaleLowerCase();\n  console.log(normalizedFilter);\n  const filtredContacts = contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  const createContactItem = () => {\n    console.log(filtredContacts);\n    return filtredContacts.map(contact => {\n      return (\n        <ItemElementStyle key={nanoid()}>\n          {`${contact.name} : ${contact.number}`}\n          <ButtonElementStyle\n            data-id={contact.id}\n            onClick={() => deleteContactFromList(contact)}\n          >\n            x\n          </ButtonElementStyle>\n        </ItemElementStyle>\n      );\n    });\n  };\n  return (\n    <ListElementStyle>\n      {loading && <Loader />}\n      {error && <p>Error... {error}</p>}\n      {contacts.items.length > 0 ? (\n        createContactItem()\n      ) : (\n        <WrapElementStyle>\n          The phone book is empty, add a contact\n        </WrapElementStyle>\n      )}\n    </ListElementStyle>\n  );\n};\n\nexport default CreateListContact;\n","// import { Suspense } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// import CreateListContact from 'components/CreateListContact/CreateListContact';\n\n// import { WrapMainElementStyle } from 'components/App/App.styled';\n// import FilterContacts from 'components/FilterContacts/FilterContacts';\n// import Loader from 'components/Loading/Loading';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutThunk } from 'redux/authOperations';\nimport { Button } from '@mui/material';\nimport { WrapMainElementStyle } from 'components/App/App.styled';\nimport FormCreateContact from 'components/Forms/FormCreateContact';\nimport FilterContacts from 'components/FilterContacts/FilterContacts';\nimport CreateListContact from 'components/CreateListContact/CreateListContact';\n// import FilterContacts from 'components/FilterContacts/FilterContacts';\n// import CreateListContact from 'components/CreateListContact/CreateListContact';\n\nconst UserPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const user = useSelector(state => state.auth.user);\n\n  const handlLogout = () => {\n    dispatch(logoutThunk());\n    navigate('/');\n  };\n  return (\n    <>\n      <WrapMainElementStyle>\n        <Button\n          onClick={() => {\n            navigate('/');\n          }}\n          type=\"button\"\n          variant=\"outlined\"\n          sx={{ mt: 1, mb: 1 }}\n          size=\"small\"\n        >\n          Go home\n        </Button>\n        <div>\n          <p>{user?.name}</p>\n          <p>{user?.email}</p>\n          <Button\n            onClick={handlLogout}\n            type=\"button\"\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n            size=\"small\"\n          >\n            Logout\n          </Button>\n        </div>\n        <h1>Phonebook</h1>\n        <FormCreateContact />\n        <h2>Contacts</h2>\n        <FilterContacts />\n        <CreateListContact />\n      </WrapMainElementStyle>\n      {/* <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense> */}\n    </>\n  );\n};\n\nexport default UserPage;\n","import styled from 'styled-components';\n\nimport bgImage from 'helper/image/telefon-bgc.jpg';\n\nexport const WrapMainElementStyle = styled('div')(() => {\n  return {\n    minHeight: '100vh',\n    fontSize: 24,\n    color: 'antiquewhite',\n    backgroundImage: `url(${bgImage})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    overflow: 'unset',\n    backgroundPosition: 'center center',\n  };\n});\n"],"names":["FormElementStyle","styled","display","flexDirection","gap","width","InputElementStyle","border","backgroundColor","padding","borderRadius","ButtonElementStyle","appearance","background","color","fontSize","cursor","useState","name","setName","number","setPhone","dispatch","useDispatch","items","useSelector","state","contacts","handleChange","target","value","resetForm","formSubmitHandler","repeatControl","newContact","nameArr","id","nanoid","length","find","toLowerCase","Notify","position","timeout","addContact","console","log","onSubmit","e","preventDefault","onChange","type","pattern","required","title","WrapElementStyle","WrapMainElementStyle","alignItems","nameInputId","filter","isLoading","htmlFor","normalizedValue","currentTarget","trim","updateFilter","ListElementStyle","listStyle","marginTop","ItemElementStyle","loading","error","isAuth","auth","filters","useEffect","fetchContacts","normalizedFilter","toLocaleLowerCase","filtredContacts","contact","includes","map","onClick","delContact","autoHideDelay","deleteContactFromList","navigate","useNavigate","user","Button","variant","sx","mt","mb","size","email","logoutThunk","minHeight","backgroundImage","bgImage","backgroundRepeat","backgroundSize","overflow","backgroundPosition"],"sourceRoot":""}