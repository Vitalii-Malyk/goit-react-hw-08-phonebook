{"version":3,"file":"static/js/79.4fccd931.chunk.js","mappings":"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","sources":["Page/Home/HomePage.styled.js","components/Forms/FormCreateContact.styled.js","components/Forms/FormCreateContact.jsx","../node_modules/nanoid/index.browser.js","components/FilterContacts/FilterContacts.styled.js","components/FilterContacts/FilterContacts.jsx","components/CreateListContact/CreateListContact.styled.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","components/CreateListContact/CreateListContact.jsx","Page/User/UserPage.jsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Update.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport bgImage from 'helper/image/telefon-bgc.jpg';\n\nexport const WrapMainElementStyle = styled.div`\n  min-height: 100vh;\n  font-size: 24;\n  color: antiquewhite;\n  background-image: url(${bgImage});\n  background-repeat: no-repeat;\n  background-size: cover;\n  overflow: unset;\n  background-position: center center;\n\n  > h1 {\n    display: flex;\n    margin: 0;\n    gap: 10px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FormElementStyle = styled('form')(() => {\n  return {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '18px',\n    width: 'fit-content',\n  };\n});\n\nexport const InputElementStyle = styled('input')(() => {\n  return {\n    border: 'none',\n    backgroundColor: 'antiquewhite',\n    padding: '4px',\n    borderRadius: '5px',\n  };\n});\n\nexport const ButtonElementStyle = styled('button')(() => {\n  return {\n    appearance: 'none',\n    border: '0',\n    borderRadius: '5px',\n    background: 'antiquewhite',\n    color: 'darkslategray',\n    padding: '4px',\n    fontSize: '16px',\n    cursor: 'pointer',\n  };\n});\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport toast from 'react-hot-toast';\n\nimport { addContact } from 'redux/contactsOperations';\n\nimport {\n  FormElementStyle,\n  InputElementStyle,\n  ButtonElementStyle,\n} from 'components/Forms/FormCreateContact.styled';\n\nconst FormCreateContact = () => {\n  const [name, setName] = useState('');\n  const [number, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const { items } = useSelector(state => state.contacts);\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'number') {\n      setPhone(value);\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n  const сreateСontact = e => {\n    e.preventDefault();\n\n    return formSubmitHandler({ name, number });\n  };\n  const formSubmitHandler = ({ name, number }) => {\n    repeatControl({ name, number });\n  };\n  const repeatControl = newContact => {\n    let nameArr = {\n      id: nanoid(),\n      name: newContact.name,\n      number: newContact.number,\n    };\n    if (items.length > 0) {\n      if (\n        !items.find(\n          nameArr =>\n            nameArr.name.toLowerCase() === newContact.name.toLowerCase()\n        )\n      ) {\n        dispatch(addContact(nameArr));\n        resetForm();\n      } else {\n        toast.error('The contact is already in the phone book!');\n      }\n    } else {\n      console.log(nameArr);\n      dispatch(addContact(nameArr));\n      resetForm();\n    }\n  };\n\n  return (\n    <FormElementStyle onSubmit={сreateСontact}>\n      <label>Name</label>\n      <InputElementStyle\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        value={name}\n        required\n      />\n      <label>Phone</label>\n      <InputElementStyle\n        type=\"tel\"\n        onChange={handleChange}\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        value={number}\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      ></InputElementStyle>\n      <ButtonElementStyle type=\"submit\">Add contact</ButtonElementStyle>\n    </FormElementStyle>\n  );\n};\n\nexport default FormCreateContact;\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import styled from 'styled-components';\n\nexport const WrapElementStyle = styled('div')(() => {\n  return {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '7px',\n    width: 'fit-content',\n  };\n});\n\nexport const InputElementStyle = styled('input')(() => {\n  return {\n    border: 'none',\n    backgroundColor: 'antiquewhite',\n    padding: '4px',\n    borderRadius: '5px',\n  };\n});\n\nexport const WrapMainElementStyle = styled('div')(() => {\n  return {\n    display: 'flex',\n    alignItems: 'end',\n    gap: '10px',\n  };\n});\n","import React from 'react';\nimport { nanoid } from 'nanoid';\n\nimport {\n  WrapElementStyle,\n  InputElementStyle,\n  WrapMainElementStyle,\n} from 'components/FilterContacts/FilterContacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from 'redux/filterSlice';\nimport Loader from 'components/Loading/Loading';\n\nconst FilterContacts = () => {\n  let nameInputId = nanoid();\n  const filter = useSelector(state => state.filter);\n\n  const dispatch = useDispatch();\n\n  const handleChange = ({ currentTarget: { value } }) => {\n    const normalizedValue = value.toLowerCase().trim();\n    dispatch(updateFilter(normalizedValue));\n  };\n\n  return (\n    <WrapMainElementStyle>\n      <WrapElementStyle>\n        <label htmlFor={nameInputId}>Filter contacts:</label>\n        <InputElementStyle\n          onChange={handleChange}\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          value={filter}\n        />\n      </WrapElementStyle>\n      <Loader />\n    </WrapMainElementStyle>\n  );\n};\n\nexport default FilterContacts;\n","import styled from 'styled-components';\n\nexport const ListElementStyle = styled.ul`\n  list-style: none;\n  padding: 0;\n  font-size: 18px;\n  display: grid;\n  justify-content: center;\n  gap: 12px;\n\n  @media (min-width: 420px) {\n    grid-template-columns: 0fr 0fr;\n  }\n  @media (min-width: 768px) {\n    grid-template-columns: 0fr 0fr 0fr;\n  }\n`;\n\nexport const ItemElementStyle = styled('li')(() => {\n  return {\n    display: 'flex',\n    gap: '8px',\n  };\n});\n\nexport const ButtonElementStyle = styled('button')(() => {\n  return {\n    border: '0',\n    color: 'antiquewhite',\n    padding: '4px 6px',\n    fontSize: '10px',\n    cursor: 'pointer',\n    background: 'transparent',\n  };\n});\n\nexport const WrapElementStyle = styled('div')(() => {\n  return {\n    marginTop: '5px',\n    fontSize: '18px',\n  };\n});\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  ListElementStyle,\n  ItemElementStyle,\n  // ButtonElementStyle,\n  WrapElementStyle,\n} from 'components/CreateListContact/CreateListContact.styled';\nimport { delContact } from 'redux/contactsOperations';\n\nimport * as React from 'react';\n// import Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\n\nimport Typography from '@mui/material/Typography';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport UpdateIcon from '@mui/icons-material/Update';\nimport { IconButton } from '@mui/material';\n\nconst CreateListContact = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts);\n  const filter = useSelector(state => state.filters);\n\n  const deleteContactFromList = ({ id, name }) => {\n    dispatch(delContact(id));\n  };\n\n  const normalizedFilter = filter.toLocaleLowerCase();\n  const filtredContacts = contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  const createContactItem = () => {\n    return filtredContacts.map(contact => {\n      return (\n        <ItemElementStyle key={nanoid()}>\n          <Card\n            sx={{ minWidth: 175, maxWidth: 200, height: 50, display: 'flex' }}\n          >\n            <CardContent sx={{ width: 150, m: 0, p: 0.2 }}>\n              <Typography\n                sx={{ mb: 0, textAlign: 'center', justifyContent: 'center' }}\n                variant=\"elevation\"\n              >{`${contact.name}`}</Typography>\n              <Typography\n                sx={{ mb: 0, textAlign: 'center', justifyContent: 'center' }}\n                color=\"text.secondary\"\n              >\n                {`${contact.number}`}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <IconButton\n                aria-label=\"delete\"\n                size=\"small\"\n                onClick={() => console.log('object')}\n              >\n                <UpdateIcon fontSize=\"inherit\" color=\"primary\" />\n              </IconButton>\n              <IconButton\n                aria-label=\"delete\"\n                size=\"small\"\n                onClick={() => deleteContactFromList(contact)}\n              >\n                <DeleteIcon fontSize=\"inherit\" color=\"primary\" />\n              </IconButton>\n            </CardActions>\n          </Card>\n\n          {/* {`${contact.name} : ${contact.number}`}\n          <ButtonElementStyle\n            data-id={contact.id}\n            onClick={() => deleteContactFromList(contact)}\n          >\n            x\n          </ButtonElementStyle> */}\n        </ItemElementStyle>\n      );\n    });\n  };\n  return (\n    <ListElementStyle>\n      {contacts.items.length > 0 ? (\n        createContactItem()\n      ) : (\n        <WrapElementStyle>\n          The phone book is empty, add a contact\n        </WrapElementStyle>\n      )}\n    </ListElementStyle>\n  );\n};\n\nexport default CreateListContact;\n\n// export function ContactCard() {\n//   return (\n//     <Card sx={{ minWidth: 275 }}>\n//       <CardContent>\n//         <Typography variant=\"h5\" component=\"div\">\n//           {`${contact.name}`}\n//         </Typography>\n//         <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n//           {`${contact.number}`}\n//         </Typography>\n//       </CardContent>\n//       <CardActions>\n//         <Button size=\"small\">Update contact</Button>\n//       </CardActions>\n//       <CardActions>\n//         <Button size=\"small\">Delete contact</Button>\n//       </CardActions>\n//     </Card>\n//   );\n// }\n","import { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport FormCreateContact from 'components/Forms/FormCreateContact';\nimport FilterContacts from 'components/FilterContacts/FilterContacts';\nimport CreateListContact from 'components/CreateListContact/CreateListContact';\n\nimport { fetchContacts } from 'redux/contactsOperations';\n\nimport { Button } from '@mui/material';\n\nimport { WrapMainElementStyle } from 'Page/Home/HomePage.styled';\n\nconst UserPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <WrapMainElementStyle>\n        <Button\n          onClick={() => {\n            navigate('/');\n          }}\n          type=\"button\"\n          variant=\"outlined\"\n          sx={{ mt: 1, mb: 1 }}\n          size=\"small\"\n        >\n          Go home\n        </Button>\n        <h1>Phonebook</h1>\n        <FormCreateContact />\n        <h2>Contacts</h2>\n        <FilterContacts />\n        <CreateListContact />\n      </WrapMainElementStyle>\n    </>\n  );\n};\n\nexport default UserPage;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 10.12h-6.78l2.74-2.82c-2.73-2.7-7.15-2.8-9.88-.1-2.73 2.71-2.73 7.08 0 9.79s7.15 2.71 9.88 0C18.32 15.65 19 14.08 19 12.1h2c0 1.98-.88 4.55-2.64 6.29-3.51 3.48-9.21 3.48-12.72 0-3.5-3.47-3.53-9.11-.02-12.58s9.14-3.47 12.65 0L21 3v7.12zM12.5 8v4.25l3.5 2.08-.72 1.21L11 13V8h1.5z\"\n}), 'Update');\nexports.default = _default;"],"names":["WrapMainElementStyle","styled","bgImage","FormElementStyle","display","flexDirection","gap","width","InputElementStyle","border","backgroundColor","padding","borderRadius","ButtonElementStyle","appearance","background","color","fontSize","cursor","useState","name","setName","number","setPhone","dispatch","useDispatch","items","useSelector","state","contacts","handleChange","target","value","resetForm","formSubmitHandler","repeatControl","newContact","nameArr","id","nanoid","length","find","toLowerCase","toast","addContact","console","log","onSubmit","e","preventDefault","onChange","type","pattern","required","title","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","WrapElementStyle","alignItems","nameInputId","filter","htmlFor","normalizedValue","currentTarget","trim","updateFilter","ListElementStyle","ItemElementStyle","marginTop","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","Paper","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","spacing","marginLeft","slots","getCardContentUtilityClass","CardContentRoot","paddingBottom","component","as","filters","normalizedFilter","toLocaleLowerCase","filtredContacts","contact","includes","map","sx","minWidth","maxWidth","height","m","p","Typography","mb","textAlign","justifyContent","variant","IconButton","onClick","Update","delContact","deleteContactFromList","Delete","navigate","useNavigate","useEffect","fetchContacts","Button","mt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}